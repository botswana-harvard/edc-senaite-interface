# Generated by Django 3.1.14 on 2023-04-04 08:05

import _socket
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_revision.revision_field
import edc_base.model_fields.hostname_modification_field
import edc_base.model_fields.userfield
import edc_base.model_fields.uuid_auto_field
import edc_base.model_validators.date
import edc_base.utils
import edc_protocol.validators
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
        ('edc_senaite_interface', '0002_auto_20220809_0901'),
    ]

    operations = [
        migrations.CreateModel(
            name='SenaiteResult',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Date and Time captured')),
                ('sample_id', models.CharField(max_length=50, unique=True, verbose_name='LIS generated sample ID')),
                ('sample_status', models.CharField(choices=[('resulted', 'Resulted'), ('stored', 'Stored'), ('pending', 'Pending')], default='resulted', max_length=50, verbose_name='Status')),
                ('is_partition', models.BooleanField(default=False)),
                ('parent_id', models.CharField(max_length=50, null=True, unique=True, verbose_name='Primary sample ID, if partition')),
                ('storage_location', models.CharField(max_length=100, null=True, verbose_name='Physical location of sample in storage.')),
                ('date_stored', models.DateField(null=True)),
                ('site', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.site')),
            ],
            options={
                'verbose_name': 'Sample Result',
            },
        ),
        migrations.CreateModel(
            name='SenaiteResultValue',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('analysis_title', models.CharField(max_length=50, verbose_name='Name of analysis/test resulted')),
                ('analysis_keyword', models.CharField(max_length=50, unique=True, verbose_name='Unique keyword used to identify the analysis')),
                ('result_value', models.CharField(max_length=50)),
                ('result_unit', models.CharField(max_length=10, null=True, verbose_name='Unit of result value e.g. (gm/dL)')),
                ('reference_values', models.CharField(max_length=50, null=True, verbose_name='Result reference values (lower-upper limit)')),
                ('out_range', models.BooleanField(default=False)),
                ('date_resulted', models.DateField()),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='edc_senaite_interface.senaiteresult')),
            ],
            options={
                'verbose_name': 'Analysis Result Value',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSenaiteResultValue',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('analysis_title', models.CharField(max_length=50, verbose_name='Name of analysis/test resulted')),
                ('analysis_keyword', models.CharField(db_index=True, max_length=50, verbose_name='Unique keyword used to identify the analysis')),
                ('result_value', models.CharField(max_length=50)),
                ('result_unit', models.CharField(max_length=10, null=True, verbose_name='Unit of result value e.g. (gm/dL)')),
                ('reference_values', models.CharField(max_length=50, null=True, verbose_name='Result reference values (lower-upper limit)')),
                ('out_range', models.BooleanField(default=False)),
                ('date_resulted', models.DateField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('result', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_senaite_interface.senaiteresult')),
            ],
            options={
                'verbose_name': 'historical Analysis Result Value',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSenaiteResult',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Date and Time captured')),
                ('sample_id', models.CharField(db_index=True, max_length=50, verbose_name='LIS generated sample ID')),
                ('sample_status', models.CharField(choices=[('resulted', 'Resulted'), ('stored', 'Stored'), ('pending', 'Pending')], default='resulted', max_length=50, verbose_name='Status')),
                ('is_partition', models.BooleanField(default=False)),
                ('parent_id', models.CharField(db_index=True, max_length=50, null=True, verbose_name='Primary sample ID, if partition')),
                ('storage_location', models.CharField(max_length=100, null=True, verbose_name='Physical location of sample in storage.')),
                ('date_stored', models.DateField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'historical Sample Result',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
